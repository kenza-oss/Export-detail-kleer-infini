# Generated by Django 5.2.4 on 2025-07-28 00:15

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChartData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chart_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='ID du graphique')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du graphique')),
                ('chart_type', models.CharField(choices=[('line', 'Ligne'), ('bar', 'Barre'), ('pie', 'Camembert'), ('area', 'Zone')], max_length=20, verbose_name='Type de graphique')),
                ('data', models.JSONField(default=dict, verbose_name='Données du graphique')),
                ('config', models.JSONField(default=dict, verbose_name='Configuration')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
            ],
            options={
                'verbose_name': 'Données de graphique',
                'verbose_name_plural': 'Données de graphiques',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='ID de métrique')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la métrique')),
                ('metric_type', models.CharField(choices=[('count', 'Compteur'), ('sum', 'Somme'), ('average', 'Moyenne'), ('percentage', 'Pourcentage'), ('trend', 'Tendance')], max_length=20, verbose_name='Type de métrique')),
                ('current_value', models.FloatField(verbose_name='Valeur actuelle')),
                ('previous_value', models.FloatField(blank=True, null=True, verbose_name='Valeur précédente')),
                ('target_value', models.FloatField(blank=True, null=True, verbose_name='Valeur cible')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='Unité')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('last_calculated', models.DateTimeField(blank=True, null=True, verbose_name='Dernier calcul')),
            ],
            options={
                'verbose_name': 'Métrique du tableau de bord',
                'verbose_name_plural': 'Métriques du tableau de bord',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name="ID d'événement")),
                ('event_type', models.CharField(choices=[('page_view', 'Vue de page'), ('api_call', 'Appel API'), ('user_action', 'Action utilisateur'), ('error', 'Erreur'), ('performance', 'Performance')], max_length=20, verbose_name="Type d'événement")),
                ('event_name', models.CharField(max_length=100, verbose_name="Nom de l'événement")),
                ('event_data', models.JSONField(default=dict, verbose_name="Données de l'événement")),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='ID de session')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('duration', models.FloatField(blank=True, null=True, verbose_name='Durée (secondes)')),
                ('success', models.BooleanField(default=True, verbose_name='Succès')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': "Événement d'analytics",
                'verbose_name_plural': "Événements d'analytics",
                'ordering': ['-created_at'],
            },
        ),
    ]
