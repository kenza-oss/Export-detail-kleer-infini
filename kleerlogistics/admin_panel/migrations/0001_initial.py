# Generated by Django 5.2.4 on 2025-08-14 23:53

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdminNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("warning", "Avertissement"),
                            ("error", "Erreur"),
                            ("success", "Succès"),
                            ("alert", "Alerte"),
                        ],
                        default="info",
                        max_length=15,
                        verbose_name="Type",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Faible"),
                            ("normal", "Normal"),
                            ("high", "Élevée"),
                            ("urgent", "Urgente"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Priorité",
                    ),
                ),
                (
                    "is_broadcast",
                    models.BooleanField(
                        default=False, verbose_name="Notification générale"
                    ),
                ),
                ("is_read", models.BooleanField(default=False, verbose_name="Lu")),
                (
                    "read_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Lu le"),
                ),
                (
                    "action_url",
                    models.URLField(blank=True, verbose_name="URL d'action"),
                ),
                (
                    "action_text",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Texte de l'action"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(default=dict, help_text="Données additionnelles"),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expire le"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
                (
                    "read_by",
                    models.ManyToManyField(
                        blank=True,
                        related_name="read_admin_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Lu par",
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="admin_notifications",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Destinataires",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification administrative",
                "verbose_name_plural": "Notifications administratives",
                "ordering": ["-created_at", "-priority"],
            },
        ),
        migrations.CreateModel(
            name="AdminReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="Nom du rapport"),
                ),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("shipments_summary", "Résumé des envois"),
                            ("payments_summary", "Résumé des paiements"),
                            ("commissions_summary", "Résumé des commissions"),
                            ("users_summary", "Résumé des utilisateurs"),
                            ("financial_summary", "Résumé financier"),
                            ("performance_summary", "Résumé des performances"),
                            ("custom", "Rapport personnalisé"),
                        ],
                        max_length=25,
                        verbose_name="Type de rapport",
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        choices=[
                            ("json", "JSON"),
                            ("csv", "CSV"),
                            ("pdf", "PDF"),
                            ("excel", "Excel"),
                        ],
                        default="json",
                        max_length=10,
                        verbose_name="Format",
                    ),
                ),
                (
                    "parameters",
                    models.JSONField(default=dict, help_text="Paramètres du rapport"),
                ),
                (
                    "filters",
                    models.JSONField(default=dict, help_text="Filtres appliqués"),
                ),
                (
                    "result_data",
                    models.JSONField(default=dict, help_text="Données du rapport"),
                ),
                (
                    "file_path",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        verbose_name="Chemin du fichier généré",
                    ),
                ),
                (
                    "generated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Généré le"),
                ),
                (
                    "is_scheduled",
                    models.BooleanField(
                        default=False, verbose_name="Rapport programmé"
                    ),
                ),
                (
                    "schedule_cron",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Expression CRON"
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Généré par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rapport administratif",
                "verbose_name_plural": "Rapports administratifs",
                "ordering": ["-generated_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardMetric",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("shipments", "Envois"),
                            ("payments", "Paiements"),
                            ("commissions", "Commissions"),
                            ("users", "Utilisateurs"),
                            ("revenue", "Revenus"),
                            ("performance", "Performance"),
                        ],
                        max_length=20,
                        verbose_name="Type de métrique",
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Quotidien"),
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=10,
                        verbose_name="Type de période",
                    ),
                ),
                ("period_start", models.DateTimeField(verbose_name="Début de période")),
                ("period_end", models.DateTimeField(verbose_name="Fin de période")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=2, max_digits=15, verbose_name="Valeur"
                    ),
                ),
                (
                    "previous_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=15,
                        null=True,
                        verbose_name="Valeur précédente",
                    ),
                ),
                (
                    "change_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Pourcentage de changement",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Données additionnelles de la métrique"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="Métrique active"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Créé le"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Modifié le"),
                ),
            ],
            options={
                "verbose_name": "Métrique du tableau de bord",
                "verbose_name_plural": "Métriques du tableau de bord",
                "ordering": ["-period_start", "metric_type"],
                "indexes": [
                    models.Index(
                        fields=["metric_type", "period_type", "period_start"],
                        name="admin_panel_metric__f1af96_idx",
                    ),
                    models.Index(
                        fields=["is_active", "created_at"],
                        name="admin_panel_is_acti_4fd7ba_idx",
                    ),
                ],
                "unique_together": {("metric_type", "period_type", "period_start")},
            },
        ),
        migrations.CreateModel(
            name="SystemHealth",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "service_name",
                    models.CharField(max_length=100, verbose_name="Nom du service"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("healthy", "En bonne santé"),
                            ("warning", "Avertissement"),
                            ("critical", "Critique"),
                            ("offline", "Hors ligne"),
                        ],
                        default="healthy",
                        max_length=15,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "response_time",
                    models.DurationField(
                        blank=True, null=True, verbose_name="Temps de réponse"
                    ),
                ),
                (
                    "uptime_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Pourcentage de disponibilité",
                    ),
                ),
                (
                    "error_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre d'erreurs"
                    ),
                ),
                (
                    "last_check",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Dernière vérification"
                    ),
                ),
                (
                    "details",
                    models.JSONField(default=dict, help_text="Détails du statut"),
                ),
            ],
            options={
                "verbose_name": "Santé du système",
                "verbose_name_plural": "Santé du système",
                "ordering": ["service_name"],
                "unique_together": {("service_name",)},
            },
        ),
        migrations.CreateModel(
            name="AdminAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("create", "Création"),
                            ("update", "Modification"),
                            ("delete", "Suppression"),
                            ("view", "Consultation"),
                            ("export", "Export"),
                            ("import", "Import"),
                            ("login", "Connexion"),
                            ("logout", "Déconnexion"),
                            ("permission_change", "Changement de permission"),
                        ],
                        max_length=20,
                        verbose_name="Action",
                    ),
                ),
                (
                    "model_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom du modèle"
                    ),
                ),
                (
                    "object_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID de l'objet"
                    ),
                ),
                (
                    "changes",
                    models.JSONField(default=dict, help_text="Changements effectués"),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                ("user_agent", models.TextField(blank=True, verbose_name="User Agent")),
                (
                    "session_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID de session"
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Métadonnées additionnelles"
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(auto_now_add=True, verbose_name="Horodatage"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log d'audit administratif",
                "verbose_name_plural": "Logs d'audit administratifs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["user", "action", "timestamp"],
                        name="admin_panel_user_id_971e14_idx",
                    ),
                    models.Index(
                        fields=["model_name", "object_id"],
                        name="admin_panel_model_n_528899_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "timestamp"],
                        name="admin_panel_ip_addr_589a76_idx",
                    ),
                ],
            },
        ),
    ]
