### ========================================
### TESTS API PAYMENTS - KLEER LOGISTICS
### ========================================

### Configuration de base
@baseUrl = http://localhost:8000/api/v1
@authToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU1OTc4OTUxLCJpYXQiOjE3NTU5NzUzNTEsImp0aSI6IjMxM2RmZGI0ZTNjYzRlODVhMmY3ZTY3YTM5MDQ0MjgxIiwidXNlcl9pZCI6IjEwIn0.szsE40RLmT-NJCP313vLCiaWcjTasL8UiYZCtUSjloo

### ========================================
### 1. AUTHENTIFICATION
### ========================================

# @name login
POST {{baseUrl}}/auth/login/
Content-Type: application/json

{
    "username": "romu",
    "password": "admin123"
}

### ========================================
### 2. MÉTHODES DE PAIEMENT
### ========================================

### Récupérer toutes les méthodes de paiement
GET {{baseUrl}}/payments/methods/
Authorization: Bearer {{authToken}}

### Récupérer les méthodes pour un montant spécifique
GET {{baseUrl}}/payments/methods/?amount=5000
Authorization: Bearer {{authToken}}

### Récupérer une méthode spécifique
GET {{baseUrl}}/payments/methods/cib/
Authorization: Bearer {{authToken}}

### ========================================
### 3. PAIEMENTS PAR CARTE BANCAIRE
### ========================================

### Paiement CIB
POST {{baseUrl}}/payments/card/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "5000.00",
    "card_type": "cib",
    "card_number": "1234567890123456",
    "card_last_four": "3456",
    "card_holder_name": "Ahmed Benali",
    "cvv": "123",
    "expiry_month": "12",
    "expiry_year": "2025",
    "shipment_id": 1,
    "description": "Paiement transport CIB"
}

### Paiement Eddahabia
POST {{baseUrl}}/payments/card/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "3000.00",
    "card_type": "eddahabia",
    "card_number": "9876543210987654",
    "card_last_four": "7654",
    "card_holder_name": "Fatima Zohra",
    "cvv": "456",
    "expiry_month": "06",
    "expiry_year": "2026",
    "shipment_id": 2,
    "description": "Paiement transport Eddahabia"
}

### ========================================
### 4. PAIEMENTS EN ESPÈCES
### ========================================

### Créer un paiement en espèces
POST {{baseUrl}}/payments/cash/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "2500.00",
    "office_location": "Bureau Kleer Infini - Alger Centre",
    "shipment_id": 3,
    "description": "Paiement en espèces pour transport",
    "contact_phone": "+213 21 123 456"
}

### Confirmer un paiement en espèces (Admin)
POST {{baseUrl}}/payments/cash/TXN123456789ABC/confirm/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "payment_date": "2024-01-15T10:30:00Z",
    "confirmation_notes": "Paiement confirmé au bureau",
    "receipt_number": "REC-2024-001"
}

### Récupérer la liste des bureaux
GET {{baseUrl}}/payments/cash-payment/offices/
Authorization: Bearer {{authToken}}

### ========================================
### 5. CALCUL DES FRAIS
### ========================================

### Calculer les frais pour un montant
GET {{baseUrl}}/payments/fees/?amount=5000&payment_method=cib
Authorization: Bearer {{authToken}}

### Calculer les frais pour un envoi
POST {{baseUrl}}/payments/fees/calculate/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "shipment_id": 1,
    "weight": 2.5,
    "distance": 150,
    "urgency": "normal",
    "insurance": false
}

### ========================================
### 6. PORTEFEUILLES VIRTUELS
### ========================================

### Récupérer le portefeuille
GET {{baseUrl}}/payments/wallet/
Authorization: Bearer {{authToken}}

### Récupérer le solde
GET {{baseUrl}}/payments/wallet/balance/
Authorization: Bearer {{authToken}}

### Effectuer un dépôt
POST {{baseUrl}}/payments/wallet/deposit/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "10000.00",
    "payment_method": "chargily",
    "description": "Dépôt initial sur le portefeuille"
}

### Effectuer un retrait
POST {{baseUrl}}/payments/wallet/withdraw/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "5000.00",
    "withdrawal_method": "bank_transfer",
    "bank_account": "1234567890",
    "description": "Retrait vers compte bancaire"
}

### Effectuer un transfert
POST {{baseUrl}}/payments/wallet/transfer/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "recipient_id": 2,
    "amount": "1000.00",
    "description": "Transfert vers un autre utilisateur"
}

### Historique des transactions
GET {{baseUrl}}/payments/wallet/transactions/
Authorization: Bearer {{authToken}}

### ========================================
### 7. CHARGILY PAY
### ========================================

### Créer un paiement Chargily
POST {{baseUrl}}/payments/chargily-payment/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "7500.00",
    "payment_mode": "edahabia",
    "shipment_id": 4,
    "description": "Paiement via Chargily Edahabia",
    "back_url": "https://kleerlogistics.com/payment/success",
    "webhook_url": "https://kleerlogistics.com/webhooks/chargily"
}

### Vérifier le statut d'un paiement Chargily
GET {{baseUrl}}/payments/chargily-payment/status/TXN123456789ABC/
Authorization: Bearer {{authToken}}

### Webhook Chargily (simulation)
POST {{baseUrl}}/payments/webhooks/chargily/
Content-Type: application/json

{
    "id": "ch_123456789",
    "order_id": "TXN123456789ABC",
    "status": "paid",
    "amount": 7500.00,
    "currency": "DZD",
    "payment_mode": "edahabia",
    "created_at": "2024-01-15T10:30:00Z"
}

### ========================================
### 8. COMMISSIONS
### ========================================

### Récupérer les détails des commissions
GET {{baseUrl}}/payments/commissions/
Authorization: Bearer {{authToken}}

### Calculer les commissions
POST {{baseUrl}}/payments/commissions/calculate/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "shipment_id": 1,
    "total_amount": "5000.00",
    "commission_rate": 25.0
}

### Appliquer les commissions
POST {{baseUrl}}/payments/commissions/apply/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "shipment_id": 1,
    "commission_amount": "1250.00",
    "traveler_amount": "3750.00",
    "description": "Commission standard Kleer Logistics"
}

### ========================================
### 9. VIREMENTS BANCAIRES
### ========================================

### Demander un virement bancaire
POST {{baseUrl}}/payments/bank-transfer/request/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "8000.00",
    "bank_name": "Banque Nationale d'Algérie",
    "account_number": "1234567890123456",
    "account_holder": "Ahmed Benali",
    "description": "Virement vers compte principal"
}

### Confirmer un virement (Admin)
POST {{baseUrl}}/payments/bank-transfer/confirm/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "transfer_id": "TXN123456789ABC",
    "bank_reference": "REF-BNA-2024-001",
    "confirmation_date": "2024-01-15",
    "notes": "Virement confirmé par la banque"
}

### Historique des virements
GET {{baseUrl}}/payments/bank-transfer/history/
Authorization: Bearer {{authToken}}

### ========================================
### 10. GESTION DES TRANSACTIONS
### ========================================

### Liste des transactions
GET {{baseUrl}}/payments/transactions/
Authorization: Bearer {{authToken}}

### Détails d'une transaction
GET {{baseUrl}}/payments/transactions/TXN123456789ABC/
Authorization: Bearer {{authToken}}

### Annuler une transaction
POST {{baseUrl}}/payments/transactions/TXN123456789ABC/cancel/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "reason": "Erreur de saisie",
    "description": "Montant incorrect saisi par l'utilisateur"
}

### Demander un remboursement
POST {{baseUrl}}/payments/transactions/TXN123456789ABC/refund/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "2500.00",
    "reason": "Service non fourni",
    "description": "Le voyageur n'a pas effectué le transport"
}

### ========================================
### 11. STATISTIQUES DE PAIEMENT
### ========================================

### Statistiques générales
GET {{baseUrl}}/payments/statistics/
Authorization: Bearer {{authToken}}

### Statistiques avec filtres de date
GET {{baseUrl}}/payments/statistics/?start_date=2024-01-01&end_date=2024-01-31
Authorization: Bearer {{authToken}}

### ========================================
### 12. TESTS D'ERREURS
### ========================================

### Test avec montant invalide
POST {{baseUrl}}/payments/card/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "-100.00",
    "card_type": "cib",
    "card_number": "1234567890123456"
}

### Test avec type de carte invalide
POST {{baseUrl}}/payments/card/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "5000.00",
    "card_type": "invalid_card",
    "card_number": "1234567890123456"
}

### Test avec numéro de carte invalide
POST {{baseUrl}}/payments/card/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "5000.00",
    "card_type": "cib",
    "card_number": "123"
}

### Test de paiement en espèces avec montant trop élevé
POST {{baseUrl}}/payments/cash/
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": "100000.00",
    "office_location": "Bureau Kleer Infini - Alger Centre"
}

### ========================================
### 13. TESTS DE PERFORMANCE
### ========================================

### Test de calcul de frais avec gros montant
GET {{baseUrl}}/payments/fees/?amount=100000&payment_method=cib
Authorization: Bearer {{authToken}}

### Test de récupération de nombreuses transactions
GET {{baseUrl}}/payments/wallet/transactions/?limit=100
Authorization: Bearer {{authToken}}

### ========================================
### NOTES DE TEST
### ========================================

# Ce fichier contient tous les tests pour le module payments
# 
# Points importants à tester :
# 1. Authentification JWT
# 2. Validation des données
# 3. Gestion des erreurs
# 4. Calculs financiers
# 5. Intégration Chargily
# 6. Gestion des portefeuilles
# 7. Commissions
# 8. Virements bancaires
# 9. Paiements en espèces
# 10. Statistiques
#
# Pour exécuter les tests :
# 1. Démarrer le serveur Django
# 2. Créer un utilisateur de test
# 3. Obtenir un token JWT
# 4. Exécuter les requêtes dans l'ordre
